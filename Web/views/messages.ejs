<div class="tab-pane container-fluid active p-0" id="messages">
    <div class="d-flex h-100 p-0">
        <div class="w-25 container px-1 border border-left-0 border-top-0" style="overflow-y: auto;">
            <ul class="nav nav-tabs flex-column" id="chatUsers"></ul>
        </div>
        <div class="w-75 bg-1 tab-content border border-left-0 border-top-0 border-right-0" id="chats"></div>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    var username = "<%= username %>";
    const socket = io();
    socket.emit("user-logged-in", username);

    let chatUsers = new Set();
    var messages = {}
    let topNav = undefined;

    function checkKey(e, user) {
        if (e.key === "Enter")
            sendMessage(user);
    }

    function sendMessage(id) {
        let msg = $(`#${id}-message`).val().trim();
        if (msg.length > 0) {
            $.ajax({
                url: "/sendMessage",
                method: "POST",
                data: { "user": id, "msg": msg },
                success: function (result) {
                    $(`#${id}-message`).val("");
                    addMessage(id, result, true, true);
                    moveNavToTop(id);
                }
            });
        }
    }

    function addNavItem(user) {
        if(!topNav)
            topNav = `#${user}-chat-link`;
        
        $("#chatUsers").append(
            `<li class="nav-item py-1 w-100">
                <a href="#${user}-tab-pane" class="nav-link" data-toggle="tab" id="${user}-chat-link" onclick="scrollBottom('${user}')">
                    <span id="${user}-sentiment"></span> ${user}
                    <small><span class="text-info last-message" id="${user}-last-message"></span></small>
                </a>
            </li>`
        );
    }

    function moveNavToTop(user){
        if(topNav)
            $(`#${user}-chat-link`).parent().insertBefore($(topNav).parent());
        topNav = `#${user}-chat-link`;
    }

    function addTabPane(user) {
        $("#chats").append(
            `<div class="tab-pane container-fluid h-100 p-0" id="${user}-tab-pane" style="overflow-y:hidden">
                <div class="d-flex flex-column px-3" id="${user}-chats" style="height: 95%; overflow-y: auto;"></div>
                <div class="bg-dark d-flex" style="height: 5%;">
                    <div class="flex-grow-1 align-self-center pl-3">
                        <input type="text" class="form-control mx-auto h-100" placeholder="Type..." id="${user}-message" onkeyup="checkKey(event, '${user}')">
                    </div>
                    <div class="align-self-center px-3">
                        <button type="button" class="btn btn-success btn-sm rounded-circle" onclick="sendMessage('${user}')">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                </div>
            </div>`
        );
        $(`#${user}-chat-link`).on('shown.bs.tab', function (e) {
            scrollBottom(user);
        });
    }

    function format(s) {
        s = s.toString();
        if (s.length === 1)
            s = "0" + s;
        return s;
    }

    function updateLastMessage(user, obj){
        $(`#${user}-last-message`).text(`${obj.sent?"You: ":""}${obj.message}`);
    }

    function addMessage(user, obj, analyzeSentiment, isLastMessage) {
        var d = new Date(obj.timestamp);
        $(`#${user}-chats`).append(
            `<div class="${obj.sent ? "ml-auto" : "mr-auto"} my-1" style="max-width: 80%;">
                <span class="${obj.sent ? "sent-message" : "received-message"} p-3 d-block">
                    ${obj.message}
                    <span class="d-block text-right"><sub class="d-inline-block text-right" style="color: #ddecff;">
                        ${format(d.getDate())}/${format(d.getMonth())}/${d.getFullYear()}, ${format(d.getHours())}:${format(d.getMinutes())}
                    </sub></span>
                </span>
            </div>`
        );

        // keep messages of last 10 minutes for sentiment analysis
        while(messages[user].length > 0 && obj.timestamp - messages[user][0].timestamp > 600000)
            messages[user].shift();
        messages[user].push({"timestamp": obj.timestamp, "message": obj.message});
        
        if(analyzeSentiment){
            $.ajax({
                url: "http://127.0.0.1:5000",
                method: "POST",
                data: JSON.stringify({"data": messages[user]}),
                contentType: "application/json",
                success: function (result) {
                    let sentiment = result['sentiment'];
                    if(sentiment==="0")
                        $(`#${user}-sentiment`).html("&#128578;");
                    else if(sentiment==="1")
                        $(`#${user}-sentiment`).html("&#128515;");
                    else
                        $(`#${user}-sentiment`).html("&#128577;");
                }
            });
        }

        scrollBottom(user);

        if(isLastMessage)
            updateLastMessage(user, obj);
    }

    function scrollBottom(user) {
        let ch = document.getElementById(`${user}-chats`);
        ch.scrollTop = ch.scrollHeight - ch.clientHeight;
    }

    $.ajax({
        url: "/getMessages",
        method: "GET",
        success: function (result) {
            for (user in result) {
                chatUsers.add(user);
                messages[user] = [];
                addNavItem(user);
                addTabPane(user);
                for (let i = result[user].length - 1; i >= 0; i--)
                    addMessage(user, result[user][i], i===0, i===0);
            }
        }
    });

    socket.on('receive-message', (user, obj) => {
        if (!chatUsers.has(user)) {
            chatUsers.add(user);
            addNavItem(user);
            addTabPane(user);
            messages[user] = [];
        }
        addMessage(user, obj, true, true);
        moveNavToTop(user);
    });
</script>